{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Diego\\\\Desktop\\\\React Course\\\\12-adv-starting-project\\\\frontend\\\\src\\\\pages\\\\Events.js\",\n  _s = $RefreshSig$();\nimport { Await, defer, json, useLoaderData } from 'react-router-dom';\nimport EventsList from '../components/EventsList';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction EventsPage() {\n  _s();\n  const {\n    events\n  } = useLoaderData();\n  return /*#__PURE__*/_jsxDEV(Await, {\n    resolve: events,\n    children: events => {}\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 5\n  }, this);\n}\n_s(EventsPage, \"22Av1LduzrZxSsk8kXUUCix36lQ=\", false, function () {\n  return [useLoaderData];\n});\n_c = EventsPage;\nexport default EventsPage;\nasync function loadEvents() {\n  const response = await fetch('http://localhost:8080/events');\n  if (!response.ok) {\n    throw json({\n      message: 'Could not find events.'\n    }, {\n      status: 500\n    });\n  } else {\n    return response;\n  }\n}\nexport function loader() {\n  return defer({\n    events: loadEvents()\n  });\n}\nvar _c;\n$RefreshReg$(_c, \"EventsPage\");","map":{"version":3,"names":["Await","defer","json","useLoaderData","EventsList","jsxDEV","_jsxDEV","EventsPage","_s","events","resolve","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","loadEvents","response","fetch","ok","message","status","loader","$RefreshReg$"],"sources":["C:/Users/Diego/Desktop/React Course/12-adv-starting-project/frontend/src/pages/Events.js"],"sourcesContent":["import { Await, defer, json, useLoaderData } from 'react-router-dom';\r\nimport EventsList from '../components/EventsList';\r\n\r\nfunction EventsPage() {\r\n    const {events} = useLoaderData();\r\n    \r\n    return (\r\n    <Await resolve={events}>\r\n        {(events) => {}}\r\n    </Await>\r\n    )\r\n}\r\n\r\nexport default EventsPage;\r\n\r\nasync function loadEvents() {\r\n    const response = await fetch('http://localhost:8080/events');\r\n\r\n    if (!response.ok) {\r\n        throw json({message: 'Could not find events.'}, \r\n        {status: 500});\r\n    } else {\r\n        return response;\r\n    }\r\n}\r\n\r\nexport function loader() {\r\n    return defer({\r\n        events: loadEvents()\r\n    })\r\n}"],"mappings":";;AAAA,SAASA,KAAK,EAAEC,KAAK,EAAEC,IAAI,EAAEC,aAAa,QAAQ,kBAAkB;AACpE,OAAOC,UAAU,MAAM,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElD,SAASC,UAAUA,CAAA,EAAG;EAAAC,EAAA;EAClB,MAAM;IAACC;EAAM,CAAC,GAAGN,aAAa,CAAC,CAAC;EAEhC,oBACAG,OAAA,CAACN,KAAK;IAACU,OAAO,EAAED,MAAO;IAAAE,QAAA,EACjBF,MAAM,IAAK,CAAC;EAAC;IAAAG,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACZ,CAAC;AAEZ;AAACP,EAAA,CARQD,UAAU;EAAA,QACEJ,aAAa;AAAA;AAAAa,EAAA,GADzBT,UAAU;AAUnB,eAAeA,UAAU;AAEzB,eAAeU,UAAUA,CAAA,EAAG;EACxB,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,8BAA8B,CAAC;EAE5D,IAAI,CAACD,QAAQ,CAACE,EAAE,EAAE;IACd,MAAMlB,IAAI,CAAC;MAACmB,OAAO,EAAE;IAAwB,CAAC,EAC9C;MAACC,MAAM,EAAE;IAAG,CAAC,CAAC;EAClB,CAAC,MAAM;IACH,OAAOJ,QAAQ;EACnB;AACJ;AAEA,OAAO,SAASK,MAAMA,CAAA,EAAG;EACrB,OAAOtB,KAAK,CAAC;IACTQ,MAAM,EAAEQ,UAAU,CAAC;EACvB,CAAC,CAAC;AACN;AAAC,IAAAD,EAAA;AAAAQ,YAAA,CAAAR,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}